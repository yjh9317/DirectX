FXC : warning X4717: Effects deprecated for D3DCompiler_47
  
  //
  // FX Version: fx_5_0
  //
  // 4 local buffer(s)
  //
  cbuffer TRANSFORM : register(b0)
  {
      float4x4 g_matWorld;                // Offset:    0, size:   64
      float4x4 g_matView;                 // Offset:   64, size:   64
      float4x4 g_matProj;                 // Offset:  128, size:   64
      float4x4 g_matWV;                   // Offset:  192, size:   64
      float4x4 g_matWVP;                  // Offset:  256, size:   64
  }
  
  cbuffer SCALAR_PARAM : register(b1)
  {
      int     g_int_0;                    // Offset:    0, size:    4
      int     g_int_1;                    // Offset:    4, size:    4
      int     g_int_2;                    // Offset:    8, size:    4
      int     g_int_3;                    // Offset:   12, size:    4
      float   g_float_0;                  // Offset:   16, size:    4
      float   g_float_1;                  // Offset:   20, size:    4
      float   g_float_2;                  // Offset:   24, size:    4
      float   g_float_3;                  // Offset:   28, size:    4
      float2  g_vec2_0;                   // Offset:   32, size:    8
      float2  g_vec2_1;                   // Offset:   40, size:    8
      float2  g_vec2_2;                   // Offset:   48, size:    8
      float2  g_vec2_3;                   // Offset:   56, size:    8
      float4  g_vec4_0;                   // Offset:   64, size:   16
      float4  g_vec4_1;                   // Offset:   80, size:   16
      float4  g_vec4_2;                   // Offset:   96, size:   16
      float4  g_vec4_3;                   // Offset:  112, size:   16
      float4x4 g_mat_0;                   // Offset:  128, size:   64
      float4x4 g_mat_1;                   // Offset:  192, size:   64
      float4x4 g_mat_2;                   // Offset:  256, size:   64
      float4x4 g_mat_3;                   // Offset:  320, size:   64
      int     g_btex_0;                   // Offset:  384, size:    4
      int     g_btex_1;                   // Offset:  388, size:    4
      int     g_btex_2;                   // Offset:  392, size:    4
      int     g_btex_3;                   // Offset:  396, size:    4
      int     g_btex_4;                   // Offset:  400, size:    4
      int     g_btex_5;                   // Offset:  404, size:    4
      int     g_btex_6;                   // Offset:  408, size:    4
      int     g_btex_7;                   // Offset:  412, size:    4
      int     g_btex_8;                   // Offset:  416, size:    4
      int     g_btex_9;                   // Offset:  420, size:    4
      int     iPadding1;                  // Offset:  424, size:    4
      int     iPadding2;                  // Offset:  428, size:    4
  }
  
  cbuffer ANIM2D : register(b2)
  {
      float2  g_vLT;                      // Offset:    0, size:    8
      float2  g_vSlice;                   // Offset:    8, size:    8
      float2  g_vBackgroundSize;          // Offset:   16, size:    8
      float2  g_vOffset;                  // Offset:   24, size:    8
      int     g_useAnim2D;                // Offset:   32, size:    4
      float   g_Atlas_Width;              // Offset:   36, size:    4
      float   g_Atlas_Height;             // Offset:   40, size:    4
      float   g_Anim2D_Padding;           // Offset:   44, size:    4
  }
  
  cbuffer GLOBAL : register(b3)
  {
      float2  vResolution;                // Offset:    0, size:    8
      float2  vNoiseResolution;           // Offset:    8, size:    8
      float   fDT;                        // Offset:   16, size:    4
      float   fAccTime;                   // Offset:   20, size:    4
      float2  vPadding;                   // Offset:   24, size:    8
  }
  
  //
  // 16 local object(s)
  //
  Texture2D g_tex_0;
  Texture2D g_tex_1;
  Texture2D g_tex_2;
  Texture2D g_tex_3;
  Texture2D g_tex_4;
  Texture2D g_tex_5;
  TextureCube g_texcube_0;
  TextureCube g_texcube_1;
  Texture2DArray g_texarr_0;
  Texture2DArray g_texarr_1;
  Texture2D g_Atlas;
  Texture2D g_noise_01;
  Texture2D g_noise_02;
  Texture2D g_noise_cloud;
  SamplerState g_sam_0
  {
  };
  SamplerState g_sam_1
  {
  };
  
FXC : warning X4717: Effects deprecated for D3DCompiler_47
  
  //
  // FX Version: fx_5_0
  //
  // 4 local buffer(s)
  //
  cbuffer TRANSFORM : register(b0)
  {
      float4x4 g_matWorld;                // Offset:    0, size:   64
      float4x4 g_matView;                 // Offset:   64, size:   64
      float4x4 g_matProj;                 // Offset:  128, size:   64
      float4x4 g_matWV;                   // Offset:  192, size:   64
      float4x4 g_matWVP;                  // Offset:  256, size:   64
  }
  
  cbuffer SCALAR_PARAM : register(b1)
  {
      int     g_int_0;                    // Offset:    0, size:    4
      int     g_int_1;                    // Offset:    4, size:    4
      int     g_int_2;                    // Offset:    8, size:    4
      int     g_int_3;                    // Offset:   12, size:    4
      float   g_float_0;                  // Offset:   16, size:    4
      float   g_float_1;                  // Offset:   20, size:    4
      float   g_float_2;                  // Offset:   24, size:    4
      float   g_float_3;                  // Offset:   28, size:    4
      float2  g_vec2_0;                   // Offset:   32, size:    8
      float2  g_vec2_1;                   // Offset:   40, size:    8
      float2  g_vec2_2;                   // Offset:   48, size:    8
      float2  g_vec2_3;                   // Offset:   56, size:    8
      float4  g_vec4_0;                   // Offset:   64, size:   16
      float4  g_vec4_1;                   // Offset:   80, size:   16
      float4  g_vec4_2;                   // Offset:   96, size:   16
      float4  g_vec4_3;                   // Offset:  112, size:   16
      float4x4 g_mat_0;                   // Offset:  128, size:   64
      float4x4 g_mat_1;                   // Offset:  192, size:   64
      float4x4 g_mat_2;                   // Offset:  256, size:   64
      float4x4 g_mat_3;                   // Offset:  320, size:   64
      int     g_btex_0;                   // Offset:  384, size:    4
      int     g_btex_1;                   // Offset:  388, size:    4
      int     g_btex_2;                   // Offset:  392, size:    4
      int     g_btex_3;                   // Offset:  396, size:    4
      int     g_btex_4;                   // Offset:  400, size:    4
      int     g_btex_5;                   // Offset:  404, size:    4
      int     g_btex_6;                   // Offset:  408, size:    4
      int     g_btex_7;                   // Offset:  412, size:    4
      int     g_btex_8;                   // Offset:  416, size:    4
      int     g_btex_9;                   // Offset:  420, size:    4
      int     iPadding1;                  // Offset:  424, size:    4
      int     iPadding2;                  // Offset:  428, size:    4
  }
  
  cbuffer ANIM2D : register(b2)
  {
      float2  g_vLT;                      // Offset:    0, size:    8
      float2  g_vSlice;                   // Offset:    8, size:    8
      float2  g_vBackgroundSize;          // Offset:   16, size:    8
      float2  g_vOffset;                  // Offset:   24, size:    8
      int     g_useAnim2D;                // Offset:   32, size:    4
      float   g_Atlas_Width;              // Offset:   36, size:    4
      float   g_Atlas_Height;             // Offset:   40, size:    4
      float   g_Anim2D_Padding;           // Offset:   44, size:    4
  }
  
  cbuffer GLOBAL : register(b3)
  {
      float2  vResolution;                // Offset:    0, size:    8
      float2  vNoiseResolution;           // Offset:    8, size:    8
      float   fDT;                        // Offset:   16, size:    4
      float   fAccTime;                   // Offset:   20, size:    4
      float2  vPadding;                   // Offset:   24, size:    8
  }
  
  //
  // 16 local object(s)
  //
  Texture2D g_tex_0;
  Texture2D g_tex_1;
  Texture2D g_tex_2;
  Texture2D g_tex_3;
  Texture2D g_tex_4;
  Texture2D g_tex_5;
  TextureCube g_texcube_0;
  TextureCube g_texcube_1;
  Texture2DArray g_texarr_0;
  Texture2DArray g_texarr_1;
  Texture2D g_Atlas;
  Texture2D g_noise_01;
  Texture2D g_noise_02;
  Texture2D g_noise_cloud;
  SamplerState g_sam_0
  {
  };
  SamplerState g_sam_1
  {
  };
  
FXC : warning X4717: Effects deprecated for D3DCompiler_47
C:\Users\yjwoo\source\repos\DirectX\DirectX\Project\Engine\Engine\particle.fx(124,16-73): warning X3206: implicit truncation of vector type
  
  //
  // FX Version: fx_5_0
  //
  // 4 local buffer(s)
  //
  cbuffer TRANSFORM : register(b0)
  {
      float4x4 g_matWorld;                // Offset:    0, size:   64
      float4x4 g_matView;                 // Offset:   64, size:   64
      float4x4 g_matProj;                 // Offset:  128, size:   64
      float4x4 g_matWV;                   // Offset:  192, size:   64
      float4x4 g_matWVP;                  // Offset:  256, size:   64
  }
  
  cbuffer SCALAR_PARAM : register(b1)
  {
      int     g_int_0;                    // Offset:    0, size:    4
      int     g_int_1;                    // Offset:    4, size:    4
      int     g_int_2;                    // Offset:    8, size:    4
      int     g_int_3;                    // Offset:   12, size:    4
      float   g_float_0;                  // Offset:   16, size:    4
      float   g_float_1;                  // Offset:   20, size:    4
      float   g_float_2;                  // Offset:   24, size:    4
      float   g_float_3;                  // Offset:   28, size:    4
      float2  g_vec2_0;                   // Offset:   32, size:    8
      float2  g_vec2_1;                   // Offset:   40, size:    8
      float2  g_vec2_2;                   // Offset:   48, size:    8
      float2  g_vec2_3;                   // Offset:   56, size:    8
      float4  g_vec4_0;                   // Offset:   64, size:   16
      float4  g_vec4_1;                   // Offset:   80, size:   16
      float4  g_vec4_2;                   // Offset:   96, size:   16
      float4  g_vec4_3;                   // Offset:  112, size:   16
      float4x4 g_mat_0;                   // Offset:  128, size:   64
      float4x4 g_mat_1;                   // Offset:  192, size:   64
      float4x4 g_mat_2;                   // Offset:  256, size:   64
      float4x4 g_mat_3;                   // Offset:  320, size:   64
      int     g_btex_0;                   // Offset:  384, size:    4
      int     g_btex_1;                   // Offset:  388, size:    4
      int     g_btex_2;                   // Offset:  392, size:    4
      int     g_btex_3;                   // Offset:  396, size:    4
      int     g_btex_4;                   // Offset:  400, size:    4
      int     g_btex_5;                   // Offset:  404, size:    4
      int     g_btex_6;                   // Offset:  408, size:    4
      int     g_btex_7;                   // Offset:  412, size:    4
      int     g_btex_8;                   // Offset:  416, size:    4
      int     g_btex_9;                   // Offset:  420, size:    4
      int     iPadding1;                  // Offset:  424, size:    4
      int     iPadding2;                  // Offset:  428, size:    4
  }
  
  cbuffer ANIM2D : register(b2)
  {
      float2  g_vLT;                      // Offset:    0, size:    8
      float2  g_vSlice;                   // Offset:    8, size:    8
      float2  g_vBackgroundSize;          // Offset:   16, size:    8
      float2  g_vOffset;                  // Offset:   24, size:    8
      int     g_useAnim2D;                // Offset:   32, size:    4
      float   g_Atlas_Width;              // Offset:   36, size:    4
      float   g_Atlas_Height;             // Offset:   40, size:    4
      float   g_Anim2D_Padding;           // Offset:   44, size:    4
  }
  
  cbuffer GLOBAL : register(b3)
  {
      float2  vResolution;                // Offset:    0, size:    8
      float2  vNoiseResolution;           // Offset:    8, size:    8
      float   fDT;                        // Offset:   16, size:    4
      float   fAccTime;                   // Offset:   20, size:    4
      float2  vPadding;                   // Offset:   24, size:    8
  }
  
  //
  // 18 local object(s)
  //
  Texture2D g_tex_0;
  Texture2D g_tex_1;
  Texture2D g_tex_2;
  Texture2D g_tex_3;
  Texture2D g_tex_4;
  Texture2D g_tex_5;
  TextureCube g_texcube_0;
  TextureCube g_texcube_1;
  Texture2DArray g_texarr_0;
  Texture2DArray g_texarr_1;
  Texture2D g_Atlas;
  Texture2D g_noise_01;
  Texture2D g_noise_02;
  Texture2D g_noise_cloud;
  SamplerState g_sam_0
  {
  };
  SamplerState g_sam_1
  {
  };
  RWStructuredBuffer ParticleBuffer;
  RWStructuredBuffer DataBuffer;
  
FXC : warning X4717: Effects deprecated for D3DCompiler_47
  
  //
  // FX Version: fx_5_0
  //
  // 4 local buffer(s)
  //
  cbuffer TRANSFORM : register(b0)
  {
      float4x4 g_matWorld;                // Offset:    0, size:   64
      float4x4 g_matView;                 // Offset:   64, size:   64
      float4x4 g_matProj;                 // Offset:  128, size:   64
      float4x4 g_matWV;                   // Offset:  192, size:   64
      float4x4 g_matWVP;                  // Offset:  256, size:   64
  }
  
  cbuffer SCALAR_PARAM : register(b1)
  {
      int     g_int_0;                    // Offset:    0, size:    4
      int     g_int_1;                    // Offset:    4, size:    4
      int     g_int_2;                    // Offset:    8, size:    4
      int     g_int_3;                    // Offset:   12, size:    4
      float   g_float_0;                  // Offset:   16, size:    4
      float   g_float_1;                  // Offset:   20, size:    4
      float   g_float_2;                  // Offset:   24, size:    4
      float   g_float_3;                  // Offset:   28, size:    4
      float2  g_vec2_0;                   // Offset:   32, size:    8
      float2  g_vec2_1;                   // Offset:   40, size:    8
      float2  g_vec2_2;                   // Offset:   48, size:    8
      float2  g_vec2_3;                   // Offset:   56, size:    8
      float4  g_vec4_0;                   // Offset:   64, size:   16
      float4  g_vec4_1;                   // Offset:   80, size:   16
      float4  g_vec4_2;                   // Offset:   96, size:   16
      float4  g_vec4_3;                   // Offset:  112, size:   16
      float4x4 g_mat_0;                   // Offset:  128, size:   64
      float4x4 g_mat_1;                   // Offset:  192, size:   64
      float4x4 g_mat_2;                   // Offset:  256, size:   64
      float4x4 g_mat_3;                   // Offset:  320, size:   64
      int     g_btex_0;                   // Offset:  384, size:    4
      int     g_btex_1;                   // Offset:  388, size:    4
      int     g_btex_2;                   // Offset:  392, size:    4
      int     g_btex_3;                   // Offset:  396, size:    4
      int     g_btex_4;                   // Offset:  400, size:    4
      int     g_btex_5;                   // Offset:  404, size:    4
      int     g_btex_6;                   // Offset:  408, size:    4
      int     g_btex_7;                   // Offset:  412, size:    4
      int     g_btex_8;                   // Offset:  416, size:    4
      int     g_btex_9;                   // Offset:  420, size:    4
      int     iPadding1;                  // Offset:  424, size:    4
      int     iPadding2;                  // Offset:  428, size:    4
  }
  
  cbuffer ANIM2D : register(b2)
  {
      float2  g_vLT;                      // Offset:    0, size:    8
      float2  g_vSlice;                   // Offset:    8, size:    8
      float2  g_vBackgroundSize;          // Offset:   16, size:    8
      float2  g_vOffset;                  // Offset:   24, size:    8
      int     g_useAnim2D;                // Offset:   32, size:    4
      float   g_Atlas_Width;              // Offset:   36, size:    4
      float   g_Atlas_Height;             // Offset:   40, size:    4
      float   g_Anim2D_Padding;           // Offset:   44, size:    4
  }
  
  cbuffer GLOBAL : register(b3)
  {
      float2  vResolution;                // Offset:    0, size:    8
      float2  vNoiseResolution;           // Offset:    8, size:    8
      float   fDT;                        // Offset:   16, size:    4
      float   fAccTime;                   // Offset:   20, size:    4
      float2  vPadding;                   // Offset:   24, size:    8
  }
  
  //
  // 17 local object(s)
  //
  Texture2D g_tex_0;
  Texture2D g_tex_1;
  Texture2D g_tex_2;
  Texture2D g_tex_3;
  Texture2D g_tex_4;
  Texture2D g_tex_5;
  TextureCube g_texcube_0;
  TextureCube g_texcube_1;
  Texture2DArray g_texarr_0;
  Texture2DArray g_texarr_1;
  Texture2D g_Atlas;
  Texture2D g_noise_01;
  Texture2D g_noise_02;
  Texture2D g_noise_cloud;
  SamplerState g_sam_0
  {
  };
  SamplerState g_sam_1
  {
  };
  StructuredBuffer ParticleBuffer;
  
FXC : warning X4717: Effects deprecated for D3DCompiler_47
  
  //
  // FX Version: fx_5_0
  //
  // 4 local buffer(s)
  //
  cbuffer TRANSFORM : register(b0)
  {
      float4x4 g_matWorld;                // Offset:    0, size:   64
      float4x4 g_matView;                 // Offset:   64, size:   64
      float4x4 g_matProj;                 // Offset:  128, size:   64
      float4x4 g_matWV;                   // Offset:  192, size:   64
      float4x4 g_matWVP;                  // Offset:  256, size:   64
  }
  
  cbuffer SCALAR_PARAM : register(b1)
  {
      int     g_int_0;                    // Offset:    0, size:    4
      int     g_int_1;                    // Offset:    4, size:    4
      int     g_int_2;                    // Offset:    8, size:    4
      int     g_int_3;                    // Offset:   12, size:    4
      float   g_float_0;                  // Offset:   16, size:    4
      float   g_float_1;                  // Offset:   20, size:    4
      float   g_float_2;                  // Offset:   24, size:    4
      float   g_float_3;                  // Offset:   28, size:    4
      float2  g_vec2_0;                   // Offset:   32, size:    8
      float2  g_vec2_1;                   // Offset:   40, size:    8
      float2  g_vec2_2;                   // Offset:   48, size:    8
      float2  g_vec2_3;                   // Offset:   56, size:    8
      float4  g_vec4_0;                   // Offset:   64, size:   16
      float4  g_vec4_1;                   // Offset:   80, size:   16
      float4  g_vec4_2;                   // Offset:   96, size:   16
      float4  g_vec4_3;                   // Offset:  112, size:   16
      float4x4 g_mat_0;                   // Offset:  128, size:   64
      float4x4 g_mat_1;                   // Offset:  192, size:   64
      float4x4 g_mat_2;                   // Offset:  256, size:   64
      float4x4 g_mat_3;                   // Offset:  320, size:   64
      int     g_btex_0;                   // Offset:  384, size:    4
      int     g_btex_1;                   // Offset:  388, size:    4
      int     g_btex_2;                   // Offset:  392, size:    4
      int     g_btex_3;                   // Offset:  396, size:    4
      int     g_btex_4;                   // Offset:  400, size:    4
      int     g_btex_5;                   // Offset:  404, size:    4
      int     g_btex_6;                   // Offset:  408, size:    4
      int     g_btex_7;                   // Offset:  412, size:    4
      int     g_btex_8;                   // Offset:  416, size:    4
      int     g_btex_9;                   // Offset:  420, size:    4
      int     iPadding1;                  // Offset:  424, size:    4
      int     iPadding2;                  // Offset:  428, size:    4
  }
  
  cbuffer ANIM2D : register(b2)
  {
      float2  g_vLT;                      // Offset:    0, size:    8
      float2  g_vSlice;                   // Offset:    8, size:    8
      float2  g_vBackgroundSize;          // Offset:   16, size:    8
      float2  g_vOffset;                  // Offset:   24, size:    8
      int     g_useAnim2D;                // Offset:   32, size:    4
      float   g_Atlas_Width;              // Offset:   36, size:    4
      float   g_Atlas_Height;             // Offset:   40, size:    4
      float   g_Anim2D_Padding;           // Offset:   44, size:    4
  }
  
  cbuffer GLOBAL : register(b3)
  {
      float2  vResolution;                // Offset:    0, size:    8
      float2  vNoiseResolution;           // Offset:    8, size:    8
      float   fDT;                        // Offset:   16, size:    4
      float   fAccTime;                   // Offset:   20, size:    4
      float2  vPadding;                   // Offset:   24, size:    8
  }
  
  //
  // 16 local object(s)
  //
  Texture2D g_tex_0;
  Texture2D g_tex_1;
  Texture2D g_tex_2;
  Texture2D g_tex_3;
  Texture2D g_tex_4;
  Texture2D g_tex_5;
  TextureCube g_texcube_0;
  TextureCube g_texcube_1;
  Texture2DArray g_texarr_0;
  Texture2DArray g_texarr_1;
  Texture2D g_Atlas;
  Texture2D g_noise_01;
  Texture2D g_noise_02;
  Texture2D g_noise_cloud;
  SamplerState g_sam_0
  {
  };
  SamplerState g_sam_1
  {
  };
  
FXC : warning X4717: Effects deprecated for D3DCompiler_47
  
  //
  // FX Version: fx_5_0
  //
  // 4 local buffer(s)
  //
  cbuffer TRANSFORM : register(b0)
  {
      float4x4 g_matWorld;                // Offset:    0, size:   64
      float4x4 g_matView;                 // Offset:   64, size:   64
      float4x4 g_matProj;                 // Offset:  128, size:   64
      float4x4 g_matWV;                   // Offset:  192, size:   64
      float4x4 g_matWVP;                  // Offset:  256, size:   64
  }
  
  cbuffer SCALAR_PARAM : register(b1)
  {
      int     g_int_0;                    // Offset:    0, size:    4
      int     g_int_1;                    // Offset:    4, size:    4
      int     g_int_2;                    // Offset:    8, size:    4
      int     g_int_3;                    // Offset:   12, size:    4
      float   g_float_0;                  // Offset:   16, size:    4
      float   g_float_1;                  // Offset:   20, size:    4
      float   g_float_2;                  // Offset:   24, size:    4
      float   g_float_3;                  // Offset:   28, size:    4
      float2  g_vec2_0;                   // Offset:   32, size:    8
      float2  g_vec2_1;                   // Offset:   40, size:    8
      float2  g_vec2_2;                   // Offset:   48, size:    8
      float2  g_vec2_3;                   // Offset:   56, size:    8
      float4  g_vec4_0;                   // Offset:   64, size:   16
      float4  g_vec4_1;                   // Offset:   80, size:   16
      float4  g_vec4_2;                   // Offset:   96, size:   16
      float4  g_vec4_3;                   // Offset:  112, size:   16
      float4x4 g_mat_0;                   // Offset:  128, size:   64
      float4x4 g_mat_1;                   // Offset:  192, size:   64
      float4x4 g_mat_2;                   // Offset:  256, size:   64
      float4x4 g_mat_3;                   // Offset:  320, size:   64
      int     g_btex_0;                   // Offset:  384, size:    4
      int     g_btex_1;                   // Offset:  388, size:    4
      int     g_btex_2;                   // Offset:  392, size:    4
      int     g_btex_3;                   // Offset:  396, size:    4
      int     g_btex_4;                   // Offset:  400, size:    4
      int     g_btex_5;                   // Offset:  404, size:    4
      int     g_btex_6;                   // Offset:  408, size:    4
      int     g_btex_7;                   // Offset:  412, size:    4
      int     g_btex_8;                   // Offset:  416, size:    4
      int     g_btex_9;                   // Offset:  420, size:    4
      int     iPadding1;                  // Offset:  424, size:    4
      int     iPadding2;                  // Offset:  428, size:    4
  }
  
  cbuffer ANIM2D : register(b2)
  {
      float2  g_vLT;                      // Offset:    0, size:    8
      float2  g_vSlice;                   // Offset:    8, size:    8
      float2  g_vBackgroundSize;          // Offset:   16, size:    8
      float2  g_vOffset;                  // Offset:   24, size:    8
      int     g_useAnim2D;                // Offset:   32, size:    4
      float   g_Atlas_Width;              // Offset:   36, size:    4
      float   g_Atlas_Height;             // Offset:   40, size:    4
      float   g_Anim2D_Padding;           // Offset:   44, size:    4
  }
  
  cbuffer GLOBAL : register(b3)
  {
      float2  vResolution;                // Offset:    0, size:    8
      float2  vNoiseResolution;           // Offset:    8, size:    8
      float   fDT;                        // Offset:   16, size:    4
      float   fAccTime;                   // Offset:   20, size:    4
      float2  vPadding;                   // Offset:   24, size:    8
  }
  
  //
  // 16 local object(s)
  //
  Texture2D g_tex_0;
  Texture2D g_tex_1;
  Texture2D g_tex_2;
  Texture2D g_tex_3;
  Texture2D g_tex_4;
  Texture2D g_tex_5;
  TextureCube g_texcube_0;
  TextureCube g_texcube_1;
  Texture2DArray g_texarr_0;
  Texture2DArray g_texarr_1;
  Texture2D g_Atlas;
  Texture2D g_noise_01;
  Texture2D g_noise_02;
  Texture2D g_noise_cloud;
  SamplerState g_sam_0
  {
  };
  SamplerState g_sam_1
  {
  };
  
FXC : warning X4717: Effects deprecated for D3DCompiler_47
  
  //
  // FX Version: fx_5_0
  //
  // 4 local buffer(s)
  //
  cbuffer TRANSFORM : register(b0)
  {
      float4x4 g_matWorld;                // Offset:    0, size:   64
      float4x4 g_matView;                 // Offset:   64, size:   64
      float4x4 g_matProj;                 // Offset:  128, size:   64
      float4x4 g_matWV;                   // Offset:  192, size:   64
      float4x4 g_matWVP;                  // Offset:  256, size:   64
  }
  
  cbuffer SCALAR_PARAM : register(b1)
  {
      int     g_int_0;                    // Offset:    0, size:    4
      int     g_int_1;                    // Offset:    4, size:    4
      int     g_int_2;                    // Offset:    8, size:    4
      int     g_int_3;                    // Offset:   12, size:    4
      float   g_float_0;                  // Offset:   16, size:    4
      float   g_float_1;                  // Offset:   20, size:    4
      float   g_float_2;                  // Offset:   24, size:    4
      float   g_float_3;                  // Offset:   28, size:    4
      float2  g_vec2_0;                   // Offset:   32, size:    8
      float2  g_vec2_1;                   // Offset:   40, size:    8
      float2  g_vec2_2;                   // Offset:   48, size:    8
      float2  g_vec2_3;                   // Offset:   56, size:    8
      float4  g_vec4_0;                   // Offset:   64, size:   16
      float4  g_vec4_1;                   // Offset:   80, size:   16
      float4  g_vec4_2;                   // Offset:   96, size:   16
      float4  g_vec4_3;                   // Offset:  112, size:   16
      float4x4 g_mat_0;                   // Offset:  128, size:   64
      float4x4 g_mat_1;                   // Offset:  192, size:   64
      float4x4 g_mat_2;                   // Offset:  256, size:   64
      float4x4 g_mat_3;                   // Offset:  320, size:   64
      int     g_btex_0;                   // Offset:  384, size:    4
      int     g_btex_1;                   // Offset:  388, size:    4
      int     g_btex_2;                   // Offset:  392, size:    4
      int     g_btex_3;                   // Offset:  396, size:    4
      int     g_btex_4;                   // Offset:  400, size:    4
      int     g_btex_5;                   // Offset:  404, size:    4
      int     g_btex_6;                   // Offset:  408, size:    4
      int     g_btex_7;                   // Offset:  412, size:    4
      int     g_btex_8;                   // Offset:  416, size:    4
      int     g_btex_9;                   // Offset:  420, size:    4
      int     iPadding1;                  // Offset:  424, size:    4
      int     iPadding2;                  // Offset:  428, size:    4
  }
  
  cbuffer ANIM2D : register(b2)
  {
      float2  g_vLT;                      // Offset:    0, size:    8
      float2  g_vSlice;                   // Offset:    8, size:    8
      float2  g_vBackgroundSize;          // Offset:   16, size:    8
      float2  g_vOffset;                  // Offset:   24, size:    8
      int     g_useAnim2D;                // Offset:   32, size:    4
      float   g_Atlas_Width;              // Offset:   36, size:    4
      float   g_Atlas_Height;             // Offset:   40, size:    4
      float   g_Anim2D_Padding;           // Offset:   44, size:    4
  }
  
  cbuffer GLOBAL : register(b3)
  {
      float2  vResolution;                // Offset:    0, size:    8
      float2  vNoiseResolution;           // Offset:    8, size:    8
      float   fDT;                        // Offset:   16, size:    4
      float   fAccTime;                   // Offset:   20, size:    4
      float2  vPadding;                   // Offset:   24, size:    8
  }
  
  //
  // 16 local object(s)
  //
  Texture2D g_tex_0;
  Texture2D g_tex_1;
  Texture2D g_tex_2;
  Texture2D g_tex_3;
  Texture2D g_tex_4;
  Texture2D g_tex_5;
  TextureCube g_texcube_0;
  TextureCube g_texcube_1;
  Texture2DArray g_texarr_0;
  Texture2DArray g_texarr_1;
  Texture2D g_Atlas;
  Texture2D g_noise_01;
  Texture2D g_noise_02;
  Texture2D g_noise_cloud;
  SamplerState g_sam_0
  {
  };
  SamplerState g_sam_1
  {
  };
  
FXC : warning X4717: Effects deprecated for D3DCompiler_47
  
  //
  // FX Version: fx_5_0
  //
  // 4 local buffer(s)
  //
  cbuffer TRANSFORM : register(b0)
  {
      float4x4 g_matWorld;                // Offset:    0, size:   64
      float4x4 g_matView;                 // Offset:   64, size:   64
      float4x4 g_matProj;                 // Offset:  128, size:   64
      float4x4 g_matWV;                   // Offset:  192, size:   64
      float4x4 g_matWVP;                  // Offset:  256, size:   64
  }
  
  cbuffer SCALAR_PARAM : register(b1)
  {
      int     g_int_0;                    // Offset:    0, size:    4
      int     g_int_1;                    // Offset:    4, size:    4
      int     g_int_2;                    // Offset:    8, size:    4
      int     g_int_3;                    // Offset:   12, size:    4
      float   g_float_0;                  // Offset:   16, size:    4
      float   g_float_1;                  // Offset:   20, size:    4
      float   g_float_2;                  // Offset:   24, size:    4
      float   g_float_3;                  // Offset:   28, size:    4
      float2  g_vec2_0;                   // Offset:   32, size:    8
      float2  g_vec2_1;                   // Offset:   40, size:    8
      float2  g_vec2_2;                   // Offset:   48, size:    8
      float2  g_vec2_3;                   // Offset:   56, size:    8
      float4  g_vec4_0;                   // Offset:   64, size:   16
      float4  g_vec4_1;                   // Offset:   80, size:   16
      float4  g_vec4_2;                   // Offset:   96, size:   16
      float4  g_vec4_3;                   // Offset:  112, size:   16
      float4x4 g_mat_0;                   // Offset:  128, size:   64
      float4x4 g_mat_1;                   // Offset:  192, size:   64
      float4x4 g_mat_2;                   // Offset:  256, size:   64
      float4x4 g_mat_3;                   // Offset:  320, size:   64
      int     g_btex_0;                   // Offset:  384, size:    4
      int     g_btex_1;                   // Offset:  388, size:    4
      int     g_btex_2;                   // Offset:  392, size:    4
      int     g_btex_3;                   // Offset:  396, size:    4
      int     g_btex_4;                   // Offset:  400, size:    4
      int     g_btex_5;                   // Offset:  404, size:    4
      int     g_btex_6;                   // Offset:  408, size:    4
      int     g_btex_7;                   // Offset:  412, size:    4
      int     g_btex_8;                   // Offset:  416, size:    4
      int     g_btex_9;                   // Offset:  420, size:    4
      int     iPadding1;                  // Offset:  424, size:    4
      int     iPadding2;                  // Offset:  428, size:    4
  }
  
  cbuffer ANIM2D : register(b2)
  {
      float2  g_vLT;                      // Offset:    0, size:    8
      float2  g_vSlice;                   // Offset:    8, size:    8
      float2  g_vBackgroundSize;          // Offset:   16, size:    8
      float2  g_vOffset;                  // Offset:   24, size:    8
      int     g_useAnim2D;                // Offset:   32, size:    4
      float   g_Atlas_Width;              // Offset:   36, size:    4
      float   g_Atlas_Height;             // Offset:   40, size:    4
      float   g_Anim2D_Padding;           // Offset:   44, size:    4
  }
  
  cbuffer GLOBAL : register(b3)
  {
      float2  vResolution;                // Offset:    0, size:    8
      float2  vNoiseResolution;           // Offset:    8, size:    8
      float   fDT;                        // Offset:   16, size:    4
      float   fAccTime;                   // Offset:   20, size:    4
      float2  vPadding;                   // Offset:   24, size:    8
  }
  
  //
  // 17 local object(s)
  //
  Texture2D g_tex_0;
  Texture2D g_tex_1;
  Texture2D g_tex_2;
  Texture2D g_tex_3;
  Texture2D g_tex_4;
  Texture2D g_tex_5;
  TextureCube g_texcube_0;
  TextureCube g_texcube_1;
  Texture2DArray g_texarr_0;
  Texture2DArray g_texarr_1;
  Texture2D g_Atlas;
  Texture2D g_noise_01;
  Texture2D g_noise_02;
  Texture2D g_noise_cloud;
  SamplerState g_sam_0
  {
  };
  SamplerState g_sam_1
  {
  };
  RWTexture2D g_RWTex_0;
  
FXC : warning X4717: Effects deprecated for D3DCompiler_47
  
  //
  // FX Version: fx_5_0
  //
  // 4 local buffer(s)
  //
  cbuffer TRANSFORM : register(b0)
  {
      float4x4 g_matWorld;                // Offset:    0, size:   64
      float4x4 g_matView;                 // Offset:   64, size:   64
      float4x4 g_matProj;                 // Offset:  128, size:   64
      float4x4 g_matWV;                   // Offset:  192, size:   64
      float4x4 g_matWVP;                  // Offset:  256, size:   64
  }
  
  cbuffer SCALAR_PARAM : register(b1)
  {
      int     g_int_0;                    // Offset:    0, size:    4
      int     g_int_1;                    // Offset:    4, size:    4
      int     g_int_2;                    // Offset:    8, size:    4
      int     g_int_3;                    // Offset:   12, size:    4
      float   g_float_0;                  // Offset:   16, size:    4
      float   g_float_1;                  // Offset:   20, size:    4
      float   g_float_2;                  // Offset:   24, size:    4
      float   g_float_3;                  // Offset:   28, size:    4
      float2  g_vec2_0;                   // Offset:   32, size:    8
      float2  g_vec2_1;                   // Offset:   40, size:    8
      float2  g_vec2_2;                   // Offset:   48, size:    8
      float2  g_vec2_3;                   // Offset:   56, size:    8
      float4  g_vec4_0;                   // Offset:   64, size:   16
      float4  g_vec4_1;                   // Offset:   80, size:   16
      float4  g_vec4_2;                   // Offset:   96, size:   16
      float4  g_vec4_3;                   // Offset:  112, size:   16
      float4x4 g_mat_0;                   // Offset:  128, size:   64
      float4x4 g_mat_1;                   // Offset:  192, size:   64
      float4x4 g_mat_2;                   // Offset:  256, size:   64
      float4x4 g_mat_3;                   // Offset:  320, size:   64
      int     g_btex_0;                   // Offset:  384, size:    4
      int     g_btex_1;                   // Offset:  388, size:    4
      int     g_btex_2;                   // Offset:  392, size:    4
      int     g_btex_3;                   // Offset:  396, size:    4
      int     g_btex_4;                   // Offset:  400, size:    4
      int     g_btex_5;                   // Offset:  404, size:    4
      int     g_btex_6;                   // Offset:  408, size:    4
      int     g_btex_7;                   // Offset:  412, size:    4
      int     g_btex_8;                   // Offset:  416, size:    4
      int     g_btex_9;                   // Offset:  420, size:    4
      int     iPadding1;                  // Offset:  424, size:    4
      int     iPadding2;                  // Offset:  428, size:    4
  }
  
  cbuffer ANIM2D : register(b2)
  {
      float2  g_vLT;                      // Offset:    0, size:    8
      float2  g_vSlice;                   // Offset:    8, size:    8
      float2  g_vBackgroundSize;          // Offset:   16, size:    8
      float2  g_vOffset;                  // Offset:   24, size:    8
      int     g_useAnim2D;                // Offset:   32, size:    4
      float   g_Atlas_Width;              // Offset:   36, size:    4
      float   g_Atlas_Height;             // Offset:   40, size:    4
      float   g_Anim2D_Padding;           // Offset:   44, size:    4
  }
  
  cbuffer GLOBAL : register(b3)
  {
      float2  vResolution;                // Offset:    0, size:    8
      float2  vNoiseResolution;           // Offset:    8, size:    8
      float   fDT;                        // Offset:   16, size:    4
      float   fAccTime;                   // Offset:   20, size:    4
      float2  vPadding;                   // Offset:   24, size:    8
  }
  
  //
  // 17 local object(s)
  //
  Texture2D g_tex_0;
  Texture2D g_tex_1;
  Texture2D g_tex_2;
  Texture2D g_tex_3;
  Texture2D g_tex_4;
  Texture2D g_tex_5;
  TextureCube g_texcube_0;
  TextureCube g_texcube_1;
  Texture2DArray g_texarr_0;
  Texture2DArray g_texarr_1;
  Texture2D g_Atlas;
  Texture2D g_noise_01;
  Texture2D g_noise_02;
  Texture2D g_noise_cloud;
  SamplerState g_sam_0
  {
  };
  SamplerState g_sam_1
  {
  };
  StructuredBuffer TileDataBuffer;
  
FXC : warning X4717: Effects deprecated for D3DCompiler_47
  
  //
  // FX Version: fx_5_0
  //
  // 4 local buffer(s)
  //
  cbuffer TRANSFORM : register(b0)
  {
      float4x4 g_matWorld;                // Offset:    0, size:   64
      float4x4 g_matView;                 // Offset:   64, size:   64
      float4x4 g_matProj;                 // Offset:  128, size:   64
      float4x4 g_matWV;                   // Offset:  192, size:   64
      float4x4 g_matWVP;                  // Offset:  256, size:   64
  }
  
  cbuffer SCALAR_PARAM : register(b1)
  {
      int     g_int_0;                    // Offset:    0, size:    4
      int     g_int_1;                    // Offset:    4, size:    4
      int     g_int_2;                    // Offset:    8, size:    4
      int     g_int_3;                    // Offset:   12, size:    4
      float   g_float_0;                  // Offset:   16, size:    4
      float   g_float_1;                  // Offset:   20, size:    4
      float   g_float_2;                  // Offset:   24, size:    4
      float   g_float_3;                  // Offset:   28, size:    4
      float2  g_vec2_0;                   // Offset:   32, size:    8
      float2  g_vec2_1;                   // Offset:   40, size:    8
      float2  g_vec2_2;                   // Offset:   48, size:    8
      float2  g_vec2_3;                   // Offset:   56, size:    8
      float4  g_vec4_0;                   // Offset:   64, size:   16
      float4  g_vec4_1;                   // Offset:   80, size:   16
      float4  g_vec4_2;                   // Offset:   96, size:   16
      float4  g_vec4_3;                   // Offset:  112, size:   16
      float4x4 g_mat_0;                   // Offset:  128, size:   64
      float4x4 g_mat_1;                   // Offset:  192, size:   64
      float4x4 g_mat_2;                   // Offset:  256, size:   64
      float4x4 g_mat_3;                   // Offset:  320, size:   64
      int     g_btex_0;                   // Offset:  384, size:    4
      int     g_btex_1;                   // Offset:  388, size:    4
      int     g_btex_2;                   // Offset:  392, size:    4
      int     g_btex_3;                   // Offset:  396, size:    4
      int     g_btex_4;                   // Offset:  400, size:    4
      int     g_btex_5;                   // Offset:  404, size:    4
      int     g_btex_6;                   // Offset:  408, size:    4
      int     g_btex_7;                   // Offset:  412, size:    4
      int     g_btex_8;                   // Offset:  416, size:    4
      int     g_btex_9;                   // Offset:  420, size:    4
      int     iPadding1;                  // Offset:  424, size:    4
      int     iPadding2;                  // Offset:  428, size:    4
  }
  
  cbuffer ANIM2D : register(b2)
  {
      float2  g_vLT;                      // Offset:    0, size:    8
      float2  g_vSlice;                   // Offset:    8, size:    8
      float2  g_vBackgroundSize;          // Offset:   16, size:    8
      float2  g_vOffset;                  // Offset:   24, size:    8
      int     g_useAnim2D;                // Offset:   32, size:    4
      float   g_Atlas_Width;              // Offset:   36, size:    4
      float   g_Atlas_Height;             // Offset:   40, size:    4
      float   g_Anim2D_Padding;           // Offset:   44, size:    4
  }
  
  cbuffer GLOBAL : register(b3)
  {
      float2  vResolution;                // Offset:    0, size:    8
      float2  vNoiseResolution;           // Offset:    8, size:    8
      float   fDT;                        // Offset:   16, size:    4
      float   fAccTime;                   // Offset:   20, size:    4
      float2  vPadding;                   // Offset:   24, size:    8
  }
  
  //
  // 16 local object(s)
  //
  Texture2D g_tex_0;
  Texture2D g_tex_1;
  Texture2D g_tex_2;
  Texture2D g_tex_3;
  Texture2D g_tex_4;
  Texture2D g_tex_5;
  TextureCube g_texcube_0;
  TextureCube g_texcube_1;
  Texture2DArray g_texarr_0;
  Texture2DArray g_texarr_1;
  Texture2D g_Atlas;
  Texture2D g_noise_01;
  Texture2D g_noise_02;
  Texture2D g_noise_cloud;
  SamplerState g_sam_0
  {
  };
  SamplerState g_sam_1
  {
  };
  
  pch.cpp
  CAnimation2D.cpp
  CAnimator2D.cpp
  CCamera.cpp
  CCollider2D.cpp
  CCollisionMgr.cpp
  CComponent.cpp
  CComputeShader.cpp
  CConstBuffer.cpp
  CCore.cpp
  CDevice.cpp
  CEntity.cpp
  CEventMgr.cpp
  CGameObject.cpp
  CGraphicsShader.cpp
  CKeyMgr.cpp
  CLayer.cpp
  CMaterial.cpp
  CMesh.cpp
  CMeshRender.cpp
  CParticleSystem.cpp
C:\Users\yjwoo\source\repos\DirectX\DirectX\Project\Engine\Engine\CResMgr.h(95): error C2259: 'CComputeShader': 추상 클래스를 인스턴스화할 수 없습니다.
C:\Users\yjwoo\source\repos\DirectX\DirectX\Project\Engine\Engine\CComputeShader.h(9): message : 'CComputeShader' 선언을 참조하십시오.
C:\Users\yjwoo\source\repos\DirectX\DirectX\Project\Engine\Engine\CResMgr.h(95): message : 다음 멤버가 원인입니다.
C:\Users\yjwoo\source\repos\DirectX\DirectX\Project\Engine\Engine\CResMgr.h(95): message : 'void CComputeShader::UpdateData(void)': abstract입니다.
C:\Users\yjwoo\source\repos\DirectX\DirectX\Project\Engine\Engine\CComputeShader.h(36): message : 'CComputeShader::UpdateData' 선언을 참조하십시오.
C:\Users\yjwoo\source\repos\DirectX\DirectX\Project\Engine\Engine\CResMgr.h(95): message : 'void CComputeShader::Clear(void)': abstract입니다.
C:\Users\yjwoo\source\repos\DirectX\DirectX\Project\Engine\Engine\CComputeShader.h(37): message : 'CComputeShader::Clear' 선언을 참조하십시오.
C:\Users\yjwoo\source\repos\DirectX\DirectX\Project\Engine\Engine\func.h(91): message : 컴파일되는 함수 템플릿 인스턴스화 'Ptr<CComputeShader> CResMgr::Load<RES>(const std::wstring &,const std::wstring &,bool)'에 대한 참조를 확인하세요.
          with
          [
              RES=CComputeShader
          ]
C:\Users\yjwoo\source\repos\DirectX\DirectX\Project\Engine\Engine\CParticleSystem.cpp(165): message : 컴파일되는 함수 템플릿 인스턴스화 'void LoadResPtr<CComputeShader>(Ptr<CComputeShader> &,FILE *)'에 대한 참조를 확인하세요.
C:\Users\yjwoo\source\repos\DirectX\DirectX\Project\Engine\Engine\CResMgr.h(95,9): error C2259: 'CComputeShader': 추상 클래스를 인스턴스화할 수 없습니다.
C:\Users\yjwoo\source\repos\DirectX\DirectX\Project\Engine\Engine\CComputeShader.h(9): message : 'CComputeShader' 선언을 참조하십시오.
C:\Users\yjwoo\source\repos\DirectX\DirectX\Project\Engine\Engine\CResMgr.h(95,9): message : 다음 멤버가 원인입니다.
C:\Users\yjwoo\source\repos\DirectX\DirectX\Project\Engine\Engine\CResMgr.h(95,9): message : 'void CComputeShader::UpdateData(void)': abstract입니다.
C:\Users\yjwoo\source\repos\DirectX\DirectX\Project\Engine\Engine\CComputeShader.h(36): message : 'CComputeShader::UpdateData' 선언을 참조하십시오.
C:\Users\yjwoo\source\repos\DirectX\DirectX\Project\Engine\Engine\CResMgr.h(95,9): message : 'void CComputeShader::Clear(void)': abstract입니다.
C:\Users\yjwoo\source\repos\DirectX\DirectX\Project\Engine\Engine\CComputeShader.h(37): message : 'CComputeShader::Clear' 선언을 참조하십시오.
  코드를 생성하고 있습니다...
C:\Users\yjwoo\source\repos\DirectX\DirectX\Project\Engine\Engine\CMaterial.cpp(187): warning C4715: 'CMaterial::GetScalarParam': 모든 제어 경로에서 값을 반환하지는 않습니다.
  컴파일하고 있습니다...
  CParticleUpdateShader.cpp
  CPathMgr.cpp
  CPrefab.cpp
  CRenderComponent.cpp
  CRenderMgr.cpp
  CRenderMgr_init.cpp
  CRes.cpp
  CResMgr.cpp
  CResMgr_init.cpp
  CScene.cpp
  CSceneFile.cpp
  CSceneMgr.cpp
  CScript.cpp
  CShader.cpp
  CStructuredBuffer.cpp
  CTestShader.cpp
  CTexture.cpp
  CTileMap.cpp
  CTimeMgr.cpp
  CTransform.cpp
  코드를 생성하고 있습니다...
  컴파일하고 있습니다...
  Engine.cpp
  extern.cpp
  func.cpp
  코드를 생성하고 있습니다...
